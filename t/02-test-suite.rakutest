use Test;
use PURL;
use JSON::Fast:ver<0.19+>:auth<cpan:TIMOTIMO>;

# To update tests:
# $ curl https://raw.githubusercontent.com/package-url/purl-spec/refs/heads/main/test-suite-data.json >/t/test-suite-data/json
my @tests = from-json
  $*PROGRAM.sibling("test-suite-data.json").slurp,
  :immutable
;

plan 1 + @tests;

ok @tests, 'did we get any tests';

for @tests -> %test {
    my $spec := %test<purl>;

    subtest %test<description> => {

        if %test<is_invalid> {
            todo "Invalid conan tests semantics unclear", 2
              if %test<type> && %test<type> eq 'conan' | 'cpan';
            nok (try PURL.new($spec)), "PURL.new('$spec') throws";
            is-deeply PURL($spec), False, "PURL('$spec) is False";
        }
        orwith PURL.new($spec) -> $purl {
            is $purl.scheme, 'pkg', "Was the scheme correct";
            is $purl.type, %test<type>, "Was the type correct";

            for <namespace name version subpath> -> $field {
                with %test{$field} {
                    todo "Unclear semantics"
                      if $field eq 'name' && $purl.type eq 'mlflow'
                      || $field eq 'subpath' && .contains(/ "/." "."? "/" /);
                    is $purl."$field"(), $_,
                      "Is $field correct";
                }
                else {
                    ok !$purl."$field"().defined,
                      "Is $field undefined";
                }
            }
            with %test<qualifiers> -> %qualifiers {
                is-deeply $purl.qualifiers, %qualifiers,
                  "Are the qualifiers correct";
            }

            my $canonical := %test<canonical_purl>;
            todo ": in version not encoded?"
              if $canonical.contains("sha256:");
            todo "slashes ok in encoded qualifier?"
              if $canonical.contains("io/release")
              || $canonical.contains("repository_url=https");
            todo ": ok in encoded name?"
              if $canonical.contains("cpan/URI::PackageURL");
            is $purl, $canonical,
              "Is the canonical version correct";

            is-deeply PURL($spec), True, "PURL('$spec) is True";
        }
        else {
            flunk "'$spec' did not produce a valid PURL object";
        }

        done-testing;
    }
}

# vim: expandtab shiftwidth=4
