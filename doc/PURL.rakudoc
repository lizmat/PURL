=begin pod

=head1 NAME

PURL - Package URL specification v1.0.X

=head1 SYNOPSIS

=begin code :lang<raku>
use PURL;

my $purl := PURL.new("pkg:maven/org.apache.commons/io@1.3.4");
say $purl.type;       # maven
say $purl.namespace;  # org.apache.commons
say $purl.name;       # io
say $purl.version,    # 1.3.4

if PURL("pkg:maven/org.apache.commons/io@1.3.4") {
    say "Valid Package URL";
}
=end code

=head1 DESCRIPTION

C<PURL> is distribution that provides a C<PURL> class that implements the
L<Package URL|https://github.com/package-url/purl-spec/blob/main/PURL-SPECIFICATION.rst>
specification, an attempt to standardize existing approaches to reliably
identify and locate software packages.

=head1 CHECKING VALIDITY

=begin code :lang<raku>
if PURL("pkg:maven/org.apache.commons/io@1.3.4") {
    say "Valid Package URL";
}
=end code

To just see whether a string that claims to be a Package URL is
valid, one can call the class itself with that string to check:
it will return either C<True> or C<False> (without throwing any
exception).

=head1 INSTANTIATION

The C<PURL> object is instantiated with the C<.new> method and the
Package URL as the only positional argument.  It will throw an error
if there is some type of problem with the Package URL.

=head1 ACCESSORS

=head2 scheme

The scheme of the package specification: always 'pkg'.

=head2 type

The type of the package specification.

=head2 name

The name of the package specification.

=head2 namespace

The namespace of the package specification.

=head2 version

The version of the package specification.

=head2 qualifiers

The qualifiers of the package specification.

=head2 subpath

The subpath of tha package specification.

=head1 AUTHOR

Elizabeth Mattijsen <liz@raku.rocks>

=head1 COPYRIGHT AND LICENSE

Copyright 2025 Elizabeth Mattijsen

This library is free software; you can redistribute it and/or modify it under the Artistic License 2.0.

=end pod

# vim: expandtab shiftwidth=4
